// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sum.proto

/*
Package sum is a generated protocol buffer package.

It is generated from these files:
	sum.proto

It has these top-level messages:
	SumRequest
	SumResponse
*/
package sum

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SumRequest struct {
	X int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (m *SumRequest) Reset()                    { *m = SumRequest{} }
func (m *SumRequest) String() string            { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()               {}
func (*SumRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SumRequest) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *SumRequest) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type SumResponse struct {
	Sum int32 `protobuf:"varint,3,opt,name=sum" json:"sum,omitempty"`
}

func (m *SumResponse) Reset()                    { *m = SumResponse{} }
func (m *SumResponse) String() string            { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()               {}
func (*SumResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SumResponse) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "SumRequest")
	proto.RegisterType((*SumResponse)(nil), "SumResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Sum service

type SumClient interface {
	CalSum(ctx context.Context, in *SumRequest, opts ...client.CallOption) (*SumResponse, error)
}

type sumClient struct {
	c           client.Client
	serviceName string
}

func NewSumClient(serviceName string, c client.Client) SumClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "sum"
	}
	return &sumClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *sumClient) CalSum(ctx context.Context, in *SumRequest, opts ...client.CallOption) (*SumResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Sum.CalSum", in)
	out := new(SumResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Sum service

type SumHandler interface {
	CalSum(context.Context, *SumRequest, *SumResponse) error
}

func RegisterSumHandler(s server.Server, hdlr SumHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Sum{hdlr}, opts...))
}

type Sum struct {
	SumHandler
}

func (h *Sum) CalSum(ctx context.Context, in *SumRequest, out *SumResponse) error {
	return h.SumHandler.CalSum(ctx, in, out)
}

func init() { proto.RegisterFile("sum.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2e, 0xcd, 0xd5,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xd2, 0xe0, 0xe2, 0x0a, 0x2e, 0xcd, 0x0d, 0x4a, 0x2d, 0x2c,
	0x4d, 0x2d, 0x2e, 0x11, 0xe2, 0xe1, 0x62, 0xac, 0x90, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x62,
	0xac, 0x00, 0xf1, 0x2a, 0x25, 0x98, 0x20, 0xbc, 0x4a, 0x25, 0x79, 0x2e, 0x6e, 0xb0, 0xca, 0xe2,
	0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x01, 0x2e, 0xe6, 0xe2, 0xd2, 0x5c, 0x09, 0x66, 0xb0, 0x34,
	0x88, 0x69, 0xa4, 0xc3, 0xc5, 0x1c, 0x5c, 0x9a, 0x2b, 0xa4, 0xca, 0xc5, 0xe6, 0x9c, 0x98, 0x03,
	0x62, 0x71, 0xeb, 0x21, 0x8c, 0x96, 0xe2, 0xd1, 0x43, 0xd2, 0xad, 0xc4, 0x90, 0xc4, 0x06, 0xb6,
	0xdf, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x4f, 0x93, 0x40, 0x8c, 0x00, 0x00, 0x00,
}
